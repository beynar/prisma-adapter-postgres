generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Test {
  id                 String       @id @default(uuid())
  string             String
  stringNullable     String?
  stringArray        String[]
  boolean            Boolean
  booleanNullable    Boolean?
  booleanArray       Boolean[]
  date               DateTime
  dateNullable       DateTime?
  dateArray          DateTime[]
  time               DateTime     @db.Time(6)
  timeNullable       DateTime?    @db.Time(6)
  timeArray          DateTime[]   @db.Time
  timestamp          DateTime     @db.Timestamp(6)
  timestampNullable  DateTime?    @db.Timestamp(6)
  timestampArray     DateTime[]   @db.Timestamp
  timestampz         DateTime     @db.Timestamptz(6)
  timestampzNullable DateTime?    @db.Timestamptz(6)
  timestampzArray    DateTime[]   @db.Timestamptz
  timetz             DateTime     @db.Timetz(6)
  timetzNullable     DateTime?    @db.Timetz(6)
  timetzArray        DateTime[]   @db.Timetz
  number             Int
  numberNullable     Int?
  numberArray        Int[]
  bigInt             BigInt
  bigIntNullable     BigInt?
  bigIntArray        BigInt[]
  smallInt           Int          @db.SmallInt
  smallIntNullable   Int?         @db.SmallInt
  smallIntArray      Int[]        @db.SmallInt
  decimal            Decimal
  decimalNullable    Decimal?
  decimalArray       Decimal[]
  money              Decimal      @db.Money
  moneyNullable      Decimal?     @db.Money
  moneyArray         Decimal[]    @db.Money
  float              Float
  floatNullable      Float?
  floatArray         Float[]
  real               Float        @db.Real
  realNullable       Float?       @db.Real
  realArray          Float[]      @db.Real
  double             Float
  doubleNullable     Float?
  doubleArray        Float[]
  json               Json
  jsonNullable       Json?
  jsonArray          Json[]
  enum               Enum
  enumNullable       Enum?
  enumArray          Enum[]
  bytes              Bytes
  bytesNullable      Bytes?
  bytesArray         Bytes[]
  oneToMany          OneToMany[]
  OneToOne           OneToOne?
  manyToMany         ManyToMany[] @relation("ManyToManyToTest")
}

model OneToOne {
  id     String @id @default(uuid())
  testId String @unique
  test   Test   @relation(fields: [testId], references: [id])
}

model OneToMany {
  id     String @id @default(uuid())
  testId String
  test   Test   @relation(fields: [testId], references: [id])
}

model ManyToMany {
  id   String @id @default(uuid())
  test Test[] @relation("ManyToManyToTest")
}

model Test2 {
  id     String @id @default(uuid())
  string String
}

enum Enum {
  ONE
  TWO
  THREE
}
